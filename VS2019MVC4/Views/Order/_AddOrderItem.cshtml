@model Dictionary<string, object>

<button type="button" class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#addItemModal">+ Add Item</button>

<!-- Modal -->
<div class="modal fade" id="addItemModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="addItemModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <form action="/order/CreateItem" method="post" class="form-horizontal" autocomplete="off">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Order Item</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Text input-->
                    <input type="hidden" id="OrderId" name="OrderId" value="@Model["OrderId"]" />
                    <div class="form-group">
                        <label for="ProductId">Product</label>
                        <select v-model="ProductId" id="ProductId" name="ProductId" class="custom-select" @@change="GetProductPrice()" autofocus required>
                            <option></option>
                            @foreach (var product in Model["ProductLookup"] as List<Product>)
                            {
                                <option value="@product.Id">@product.Name - @string.Format("{0:C}", product.UnitPrice)/@product.Unit</option>
                            }
                        </select>
                    </div>
                    <div class="form-group row">
                        <label for="Quantity" class="col-4 col-form-label">Quantity</label>
                        <div class="col-8">
                            <input type="number" v-model="Quantity" id="Quantity" name="Quantity" class="form-control" min="1" required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="UnitPrice" class="col-4 col-form-label">Retail Price</label>
                        <div class="col-8">
                            <input type="text" v-model="UnitPrice" id="UnitPrice" name="UnitPrice" class="form-control" readonly required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="Amount" class="col-4 col-form-label">Amount</label>
                        <div class="col-8">
                            <input type="text" id="Amount" v-model="Amount" class="form-control" readonly>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="module">
    // https://github.com/vuejs/petite-vue
    import { createApp } from "/Scripts/petite-vue.es.js";
    const app = {
        //data
        ProductId: null,
        Quantity: 1,
        UnitPrice: null,
        //methods
        GetProductPrice() {
            fetch('/Order/GetProductPrice/' + this.ProductId)
                .then(response => response.json())
                .then((data) => {
                    this.UnitPrice = data;
                });
        },
        //computed
        get Amount() {
            let PHPeso = new Intl.NumberFormat('en-PH', {
                style: 'currency',
                currency: 'PHP',
            });
            return PHPeso.format(this.Quantity * this.UnitPrice);
        }
    };
    createApp(app).mount();
</script>

