﻿@model Dictionary<string, object>

@{
    ViewBag.Title = "`POS";

    var saleDate = (DateTime)Model["SaleDate"];   
    var userId = Model["UserId"];
    var products = Model["ProductLookup"] as List<Product>;
    var arrProductLookup = Newtonsoft.Json.JsonConvert.SerializeObject(products);
}

@section head
{
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link rel="stylesheet" href="/Content/Util/slimselect.min.css" />
    <style>
        .scroll-box {
            height: 310px;
            overflow-y: scroll;
        }
    </style>

    @* Preload the product images for faster preview. *@
    @foreach (var product in products.Where(x => !string.IsNullOrEmpty(x.PictureFilename)))
    {
        <link rel="preload" href="/uploadedimages/@product.PictureFilename" as="image">
    }
}


<!-- ========================= SECTION CONTENT ========================= -->
<section @@vue:mounted="setupScanner()">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-body text-center">
                        <div class="mb-3" style="width: 500px" id="reader"></div>
                        <button type="button" class="btn btn-outline-primary btn-lg" data-toggle="modal" data-target="#addItemModal">Search Product or Set Quantity</button>
                    </div>
                </div> <!-- card.// -->
            </div>

            <div class="col-lg-4">
                <div class="col" v-if="productImgPath">
                    <img :src="'/uploadedimages/' + productImgPath" class="img-thumbnail">
                </div>
            </div>

            <div class="col-lg-4">
                <form action="/pos/Add" method="post">
                    <input type="hidden" name="SaleDate" value="@saleDate" />
                    <input type="hidden" name="UserId" value="@userId" />
                    <div class="card">
                        <div style="overflow-y:scroll;">
                            <table class="table table-striped" style="margin-bottom: 0;">
                                <tr class="text-muted">
                                    <th width="20" class="text-center pr-0"><button class="btn btn-sm" style="visibility:hidden"> <i class="fa fa-trash"></i></button></th>
                                    <th>Item</th>
                                    <th width="20" class="text-center">Qty</th>
                                    <th width="100" class="text-right">Amount</th>
                                </tr>
                            </table>
                        </div>
                        <div class="scroll-box" v-effect="if(saleItems.length) $el.scrollTop = $el.scrollHeight">
                            <table class="table">
                                <tr v-for="(item,index) in saleItems" :key="index">
                                    <td width="20" class="text-center pr-0">
                                        <a href="" class="btn btn-outline-danger btn-sm"> <i class="fa fa-trash"></i></a>
                                    </td>
                                    <td>
                                        <strong>{{ item.Name }}</strong> {{ item.UnitPrice.toFixed(2) }}
                                        <input type="hidden" v-model="item.ProductId" :name="'SaleItems[' + index + '].ProductId'" />
                                        <input type="hidden" v-model="item.UnitPrice" :name="'SaleItems[' + index + '].UnitPrice'" />
                                    </td>
                                    <td width="20" class="text-center">
                                        {{ item.Quantity }} <input type="hidden" v-model="item.Quantity" :name="'SaleItems[' + index + '].Quantity'" />
                                    </td>
                                    <td width="100" class="text-right">
                                        {{ (item.UnitPrice * item.Quantity).toFixed(2) }}
                                    </td>
                                </tr>
                            </table>
                        </div> <!-- card.// -->

                    </div> <!-- card.// -->

                    <div class="box mt-3" style="font-size:large;">
                        <dl class="dlist-align">
                            <dt>Sub Total:</dt>
                            <dd class="text-right">${{ total.total.toFixed(2) }}</dd>
                        </dl>
                        <dl class="dlist-align">
                            <dt>Discount:</dt>
                            <dd class="text-right">
                                <input type="text" v-model="discount" style="text-align:right;border-color:transparent;width:100px" />%
                            </dd>
                        </dl>
                        <dl class="dlist-align">
                            <dt>Total: </dt>
                            <dd class="text-right h4 b"> ${{ total.discounted.toFixed(2) }} </dd>
                        </dl>
                        <div class="row">
                            <div class="col-md-6">
                                <a href="#" class="btn  btn-secondary btn-lg btn-block"><i class="fa fa-times-circle "></i> Cancel </a>
                            </div>
                            <div class="col-md-6">
                                <button type="submit" class="btn btn-primary btn-lg btn-block"><i class="fa fa-shopping-bag"></i> Charge </button>
                            </div>
                        </div>
                    </div> <!-- box.// -->

                </form>
            </div>
        </div>
    </div><!-- container //  -->

    <div class="modal fade" id="addItemModal" data-backdrop="static" data-keyboard="false" aria-labelledby="addItemModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Search Product</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Text input-->
                    <div class="form-group">
                        <select v-model="searchProductId" id="searchProductId" class="form-control" autofocus required>
                            <option selected disabled>Select Product</option>
                            @foreach (var product in products)
                            {
                                <option value="@product.Id" data-sku="@product.SKU">@product.Name - ₱@product.UnitPrice.ToString("N2")/@product.Unit</option>
                            }
                        </select>
                    </div>
                    <div class="form-group row">
                        <label for="Quantity" class="col-md-4 col-form-label">Quantity</label>
                        <div class="col-md-8">
                            <input type="number" v-model="searchQuantity" id="searchQuantity" class="form-control" min="1" required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col">
                            <button type="button" class="btn btn-primary btn-lg btn-block" @@click="addItem()">Add Item</button>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col" v-if="productImgPath">
                            <img :src="'/uploadedimages/' + productImgPath" class="img-thumbnail">
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

</section>


@section scripts
{
    <script src="/Scripts/html5-qrcode.min.js"></script>
    <script type="module">
        // https://github.com/brianvoe/slim-select
        import SlimSelect from '/Scripts/Util/slimselect.es.min.js'
        var selectProduct = new SlimSelect({
            select: '#searchProductId',
            settings: { searchPlaceholder: 'Search for product name or SKU' },
            events: {
                searchFilter: (option, search) => {
                    return option.text.toLowerCase().includes(search.toLowerCase())
                        || ( option.data.sku && option.data.sku.toLowerCase() === search.toLowerCase() )
                }
            }
        });

        // https://github.com/vuejs/petite-vue
        import { createApp } from "/Scripts/petite-vue.es.js";
        const app = {
            // For QR scanner
            html5QrcodeScanner: null,
            barcodeText: '',
            onScanSuccess(decodedText, decodedResult) {
                if (decodedText === this.barcodeText) return;
                console.log(`Scan result: ${decodedText}`, decodedResult);
                this.barcodeText = decodedText;
                this.searchProductId = decodedText.replace('@ViewBag.StoreItemPrefix', '');
                this.addItem();
            },
            setupScanner() { //vue:mounted
                this.html5QrcodeScanner = new Html5QrcodeScanner("reader", { fps: 10, qrbox: 250 }).render(this.onScanSuccess);
            },

            // For product search
            arrProductLookup: @(Html.Raw(arrProductLookup)),
            searchProductId: null,
            searchQuantity: 1,
            discount: 0,
            productImgPath: '',
            saleItems: [],
            newItem: {},
            addItem() {
                this.newItem = {
                    ProductId: this.product.Id,
                    Name: this.product.Name,
                    UnitPrice: this.product.UnitPrice,
                    Quantity: this.searchQuantity
                };
                this.saleItems.push({ ...this.newItem });
                selectProduct.setSelected(null)
                this.searchProductId = null;
                this.searchQuantity = 1;
                $('#addItemModal').modal('hide');
            },
            get product() {
                var product = this.arrProductLookup.find(x => x.Id == this.searchProductId);
                this.productImgPath = product ? product.PictureFilename : '';
                return product;
            },
            get total() {
                var total = 0.00;
                var discounted = 0.00;
                this.saleItems.forEach(item => {
                    var amount = item.UnitPrice * item.Quantity;
                    total += amount;
                    discounted += amount * (1 - this.discount / 100);
                });
                return { total, discounted }
            }
        };
        createApp(app).mount();

    </script>
}


